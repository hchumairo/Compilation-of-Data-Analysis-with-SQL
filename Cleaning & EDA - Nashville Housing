-- Look at the Data
select *
from dbo.NashvilleHousing

-- Standarize Data Format
select 
  SaleDate,
  convert(date, SaleDate)
from dbo.NashvilleHousing

update dbo.NashvilleHousing
set SaleDate = convert(date, SaleDate) 
-- after run this query, nothing changed

-- So, use ALTER TABLE
alter table dbo.NashvilleHousing
add SaleDateConverted date;

update dbo.NashvilleHousing
set SaleDateConverted = convert(date, SaleDate)

-- Populate Property Address Data
select
  a.ParcelID,
  a.PropertyAddress,
  b.ParcelID,
  b.PropertyAddress,
  isnull(a.PropertyAddress, b.PropertyAddress)
from dbo.NashvilleHousing a
join dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

update a
set a.PropertyAddress = isnull(a.PropertyAddress, b.PropertyAddress)
from dbo.NashvilleHousing a
join dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

-- Breaking Out Address into Individual Columns (Address, City, State)
select
  substring(PropertyAddress, 1, charindex(',', PropertyAddress) -1) as Address,
  substring(PropertyAddress, charindex(',', PropertyAddress) +1, len(PropertyAddress)) as City
from dbo.NashvilleHousing

alter table dbo.NashvilleHousing
add PropAddress nvarchar(255);

update dbo.NashvilleHousing
set PropAddress = substring(PropertyAddress, 1, charindex(',', PropertyAddress) -1)

alter table dbo.NashvilleHousing
add PropCity nvarchar(255);

update dbo.NashvilleHousing
set PropCity = substring(PropertyAddress, charindex(',', PropertyAddress) +1, len(PropertyAddress))


select 
  parsename(replace(OwnerAddress, ',', '.'), 3),
  parsename(replace(OwnerAddress, ',', '.'), 2),
  parsename(replace(OwnerAddress, ',', '.'), 1)
from dbo.NashvilleHousing

alter table dbo.NashvilleHousing
add OwnAddress nvarchar(255),
	OwnCity nvarchar(255),
	OwnState nvarchar(255);

update dbo.NashvilleHousing
set OwnAddress = parsename(replace(OwnerAddress, ',', '.'), 3),
	OwnCity = parsename(replace(OwnerAddress, ',', '.'), 2),
	OwnState = parsename(replace(OwnerAddress, ',', '.'), 1)

-- Change Y and N to Yes and No in Sale as Vacant Field
select 
  SoldAsVacant,
  case when SoldAsVacant = 'Y' then 'Yes'
	  when SoldAsVacant = 'N' then 'No'
	  else SoldAsVacant
  end
from dbo.NashvilleHousing


update dbo.NashvilleHousing
set SoldAsVacant = 
	case when SoldAsVacant = 'Y' then 'Yes'
		 when SoldAsVacant = 'N' then 'No'
		 else SoldAsVacant
	end


-- Remove Duplicates
with CTE as (
select 
  *, 
  row_number()
    over (partition by ParcelID, LandUse, PropertyAddress, SaleDate, SalePrice, LegalReference, SoldAsVacant, OwnerName, OwnerAddress, Acreage, TaxDistrict, LandValue, BuildingValue, TotalValue, YearBuilt, Bedrooms, FullBath, HalfBath order by ParcelID)
    as rn
from dbo.NashvilleHousing
)

delete
from CTE
where rn > 1
